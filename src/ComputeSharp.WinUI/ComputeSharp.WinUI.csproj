<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net8.0-windows10.0.22621.0</TargetFramework>
    <TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
    <WindowsSdkPackageVersion>10.0.22621.54</WindowsSdkPackageVersion>
    <Platforms>x64;ARM64</Platforms>
    <RuntimeIdentifiers>win-x64;win-arm64</RuntimeIdentifiers>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.WindowsAppSDK" Version="1.6.250228001" />

    <!--
      The 'Microsoft.Web.WebView2' package that WindowsAppSDK has a transitive dependency on is an older version, which
      has a bug causing 'WebView2Loader.dll' to be referenced in the .pri file produced for this library. This breaks
      downstream consumers, as that .dll will not actually exist in the NuGet package (it's from the 'WebView2' package).
      Because we don't even need anything from this package at all anyway, we can fix this by just excluding it entirely.
    -->
    <PackageReference Include="Microsoft.Web.WebView2" Version="1.0.3124.44" PrivateAssets="all" IncludeAssets="none" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\ComputeSharp\ComputeSharp.csproj" />
  </ItemGroup>

  <Import Project="..\ComputeSharp.UI\ComputeSharp.UI.projitems" Label="Shared" />
</Project>
